import{r as _}from"./index-Cfk6WAwh.js";import{GRID_CONFIG as D}from"./bentoConfig-C43WwT_V.js";import{normalizeDeviceType as I,useDeviceType as E}from"./useDeviceType-IESK7Nup.js";const S=x=>{const w=I(E());function p(f,d){const l=D[f==null?void 0:f.toUpperCase()];return l?d in l?l[d]:(console.warn(`Key "${d}" is not found in GRID_CONFIG.${f}.`),null):(console.warn(`Device type "${f}" is not defined in GRID_CONFIG.`),null)}return _.useMemo(()=>{const f=(t,e)=>{const{x:n,y:o,width:i,height:s}=t,{x:c,y:a,width:r,height:h}=e;return!(n+i<=c||c+r<=n||o+s<=a||a+h<=o)},d=(t,e)=>{const n=[],{id:o}=t;for(const i of e)i.id!==o&&f(t,i)&&n.push(i);return n},l=t=>({right:["right","down","up","left"],left:["left","down","up","right"],down:["down","right","left","up"],up:["up","right","left","down"]})[t]||["down","right","left","up"],b=(t,e,n)=>{let o=t.x,i=t.y;for(let s=1;s<=p(w,"MAX_SEARCH_STEPS");s++){switch(e){case"right":o=t.x+s;break;case"left":o=t.x-s;break;case"down":i=t.y+s;break;case"up":i=t.y-s;break}if(o<0||o+t.width>p(w,"MAX_COLUMNS")||i<0)break;const c={...t,x:o,y:i};if(!n.some(r=>r.id!==t.id&&f(c,r)))return{x:o,y:i}}return null},y=(t,e)=>{for(let n=0;n<20;n++)for(let o=0;o<=p(w,"MAX_COLUMNS")-t.width;o++){const i={...t,x:o,y:n};if(!e.some(c=>c.id!==t.id&&f(i,c)))return{x:o,y:n}}return{x:t.x,y:t.y+1}},C=(t,e,n)=>{const o=l(e);for(const i of o){const s=b(t,i,n);if(s)return s}return y(t,n)};return{detectCollision:d,findNextFreePosition:C,calculatePreviewPositions:(t,e,n)=>{const o=d(t,n);if(o.length===0)return{};const i={},s=[...o],c=new Set;let a=n.map(r=>r.id===t.id?t:r);for(;s.length>0;){const r=s.shift();if(c.has(r.id))continue;const h=C(r,e,a);if(h){const g={...r,...h};d(g,a).forEach(u=>{!c.has(u.id)&&!s.some(P=>P.id===u.id)&&s.push(u)}),i[r.id]=h,a=a.map(u=>u.id===r.id?g:u),c.add(r.id)}}return i}}},[x.bento_fr,x.bento_gap])};export{S as useCollisionSystem};
